package it.prova.cartellaesattorialespringjpa.model.dto;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import org.apache.commons.lang.StringUtils;

import it.prova.cartellaesattorialespringjpa.model.CartellaEsattoriale;
import it.prova.cartellaesattorialespringjpa.model.Contribuente;

public class ContribuenteDTO {
	private Long id;
	private String nome;
	private String cognome;
	private String codiceFiscale;
	private String indirizzo;
	private Set<CartellaEsattoriale> cartelle = new HashSet<>();
	
	public ContribuenteDTO() {}
	
	public Long getId() {
		return id;
	}
	public void setId(Long id) {
		this.id = id;
	}
	public String getNome() {
		return nome;
	}
	public void setNome(String nome) {
		this.nome = nome;
	}
	public String getCognome() {
		return cognome;
	}
	public void setCognome(String cognome) {
		this.cognome = cognome;
	}
	public String getCodiceFiscale() {
		return codiceFiscale;
	}
	public void setCodiceFiscale(String codiceFiscale) {
		this.codiceFiscale = codiceFiscale;
	}
	public String getIndirizzo() {
		return indirizzo;
	}
	public void setIndirizzo(String indirizzo) {
		this.indirizzo = indirizzo;
	}
	public Set<CartellaEsattoriale> getCartelle() {
		return cartelle;
	}
	public void setCartelle(Set<CartellaEsattoriale> cartelle) {
		this.cartelle = cartelle;
	}
	
	public List<String> validate(){
		List <String> listaErrori = new ArrayList<String>();
		if (StringUtils.isEmpty( this.getNome())) {
			listaErrori.add("Nome non valido");
		}
		if (this.getCognome().equals("")) {
			listaErrori.add("Cognome non valido");
		}
		if (this.getCodiceFiscale().equals("")) {
			listaErrori.add("Codice fiscale non valido");
		}
		if(this.getIndirizzo().equals("")) {
			listaErrori.add("Indirizzo non valido");
		}
		return listaErrori;
	}

	public static Contribuente creaContribuenteDaDto(ContribuenteDTO contribuenteDTO) {
		Contribuente contribuente= new Contribuente();
		contribuente.setNome(contribuenteDTO.getNome());
		contribuente.setCognome(contribuenteDTO.getCognome());
		contribuente.setIndirizzo(contribuenteDTO.getIndirizzo());
		contribuente.setCodiceFiscale(contribuenteDTO.getCodiceFiscale());
		return contribuente
		
	}
}
